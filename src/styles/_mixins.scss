// Breakpoint mixins
@mixin breakpoint($point) {
  @if $point == xs {
    @media (min-width: var(--breakpoint-xs)) { 
      & { @content; }
    }
  }
  @else if $point == sm {
    @media (min-width: var(--breakpoint-sm)) {
      & { @content; }
    }
  }
  @else if $point == md {
    @media (min-width: var(--breakpoint-md)) {
      & { @content; }
    }
  }
  @else if $point == lg {
    @media (min-width: var(--breakpoint-lg)) {
      & { @content; }
    }
  }
  @else if $point == xl {
    @media (min-width: var(--breakpoint-xl)) {
      & { @content; }
    }
  }
  @else if $point == 2xl {
    @media (min-width: var(--breakpoint-2xl)) {
      & { @content; }
    }
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Typography mixins
@mixin heading-1 {
  font-size: var(--font-size-4xl);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
}

@mixin heading-2 {
  font-size: var(--font-size-3xl);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
}

@mixin heading-3 {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
}

// Container mixin
@mixin container {
  width: 100%;
  max-width: var(--container-width);
  margin: 0 auto;
  padding: 0 var(--spacing-4);

  @include breakpoint(md) {
    padding: 0 var(--spacing-6);
  }
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-2) var(--spacing-4);
  border-radius: var(--border-radius-default);
  font-weight: var(--font-weight-medium);
  transition: var(--transition-default);
  cursor: pointer;
  border: none;
  outline: none;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: var(--color-primary);
  color: var(--color-white);

  &:hover:not(:disabled) {
    background-color: var(--color-primary-dark);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: var(--color-secondary);
  color: var(--color-white);

  &:hover:not(:disabled) {
    background-color: darken(var(--color-secondary), 10%);
  }
}

// Card mixin
@mixin card {
  background-color: var(--color-white);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-md);
  padding: var(--spacing-6);
}

// Grid mixins
@mixin grid-cols($cols) {
  display: grid;
  grid-template-columns: repeat($cols, minmax(0, 1fr));
  gap: var(--spacing-4);
}

// Animation mixins
@mixin fade-in {
  animation: fadeIn 0.3s ease-in;
}

@mixin slide-up {
  animation: slideUp 0.3s ease-out;
}

// Focus styles
@mixin focus-ring {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}
